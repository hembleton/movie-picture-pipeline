name: Frontend Continuous Deployment

on:
  push:
    branches: [main]
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  REACT_APP_MOVIE_API_URL: http://localhost:5000
  AWS_REGION: us-east-1
  ECR_REPO: 607049766878.dkr.ecr.us-east-1.amazonaws.com/frontend

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - uses: actions/checkout@v3
        with:
          path: starter
      - uses: actions/setup-node@v3
        with:
          node-version: latest
      - run: npm ci
      - run: CI=true npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - uses: actions/checkout@v3
        with:
          path: starter
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} -t $ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REPO:$IMAGE_TAG
        env:
          ECR_REPO: ${{ env.ECR_REPO }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend/k8s
    steps:
      - uses: actions/checkout@v3
        with:
          path: starter
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name <your-cluster-name>
      - name: Set Image Tag in Kustomize
        run: kustomize edit set image frontend=${{ env.ECR_REPO }}:${{ github.sha }}
      - name: Apply Kubernetes Manifests
        run: kustomize build | kubectl apply -f -
